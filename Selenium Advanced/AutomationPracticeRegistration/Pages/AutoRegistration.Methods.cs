using AutoFixture;
using NUnit.Framework;
using OpenQA.Selenium;
using System.Threading;

namespace AutomationPracticeRegistration.Pages
{
    public partial class AutoRegistration : BasePage
    {
        public AutoRegistration(IWebDriver driver)
            : base(driver)
        {

        }

        public string SignIn()
        {
            var fixture = new Fixture();
            IWebElement FindAndClickSignIn = Wait.Until<IWebElement>(d => d.FindElement(By.PartialLinkText(@"Sign in")));
            FindAndClickSignIn.Click();

            var mail = fixture.Create<string>().Substring(0, 5) + "@gmail.com"; // limits the autogenerated string to 5 characters

            var FindInputField = Wait.Until<IWebElement>(d => d.FindElement(By.XPath("//*[@id='email_create']")));
            FindInputField.SendKeys(mail);

            IWebElement FindAndClickSubmitCreate = Driver.FindElement(By.Id("SubmitCreate"));
            FindAndClickSubmitCreate.Click();

            return mail;
        }

        public string EmailOnPage()
        {
            Thread.Sleep(2000);
            IWebElement verifySameMail = Wait.Until<IWebElement>(d => d.FindElement(By.Id("email")));
            string valueOfEMail = verifySameMail.GetAttribute("value");

            return valueOfEMail;
        }


        public void VerifyGoogleSearch()
        {
            IWebElement searhKeyword = Wait.Until<IWebElement>(d => d.FindElement(By.XPath("/html/body/div/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input")));
            searhKeyword.SendKeys("selenium");
            searhKeyword.SendKeys(Keys.Enter);

            IWebElement openFirstResutl = Wait.Until<IWebElement>(d => d.FindElement(By.CssSelector("#rso > div:nth-child(1) > div > div.r > a > h3")));
            openFirstResutl.Click();

            string currentUrl = Driver.Url;
            string actualTitle = Driver.Title;

            if (currentUrl == "https://www.selenium.dev/")
            {
                Assert.AreEqual(actualTitle, "SeleniumHQ Browser Automation");
            }
            else
            {
                Assert.IsTrue(false);
            }
        }


        public void SoftuniNav()
        {

            IWebElement coursesMenu = Wait.Until<IWebElement>(d => d.FindElement(By.XPath("/html/body/div[1]/div[1]/header/nav/div[1]/ul/li[2]/a/span")));
            coursesMenu.Click();

            Thread.Sleep(1500);
            IWebElement PlusSign = Wait.Until<IWebElement>(d => d.FindElement(By.XPath("(//*[@class='my-collapsible-indicator fa fa-plus-circle pull-right'])[2]")));
            PlusSign.Click();

            IWebElement selectCourseLink = Wait.Until<IWebElement>(d => d.FindElement(By.PartialLinkText("Quality Assurance - октомври 2019")));
            selectCourseLink.Click();

            IWebElement selectQAAutomation = Wait.Until<IWebElement>(d => d.FindElement(By.XPath("(//*[@class='course-instance-box'])[3]")));
            selectQAAutomation.Click();

            string descriptionTextXPath = "//html/body/div[2]/header/h1";

            IWebElement headingTagText = Driver.FindElement(By.XPath(descriptionTextXPath));

            Assert.AreEqual(headingTagText.Text, "QA Automation - май 2020");

        }

    }

}



